micro:bit LIVE 2021 | Jacdac - plug-and-play accessories
https://www.youtube.com/watch?v="Jqn2YCUkWqk
all right um and welcome everybody to this uh morning session or night session um the microbead live uh we're gonna be talking about something called jagdag you're gonna hear that word a lot um my name is peli deleu i have a difficult name to pronounce um and uh i work for microsoft research i've been involved with the microbit for uh for quite a while from the start and you know our team built uh the original iteration of make code which is now you know maintained by by the product team the midco team doing great job there and we've been kind of trying to figure out whether we could improve the experience for teachers and students so what we're going to talk today about is something called plug and play accessories this is something we've been working on for a few years now and today we're kind of ready to unveil it and push it out we've open source uh we've been working in open source and we have now the software the firmware the hardware out there so if you're uh if you're a teacher this is going to be interesting for you if you're um if you're accessory vendor maker manufacturer this is also going to be interesting for you because this is something that's coming up or your way so without further due we're going to talk a little bit about um why we build jagdak and you know what what's the deal with it and when we got the micro bit microwave is cool but why do we need something else why do we need plug and play accessories well i think what why do we think we need it all right so with uh with the micro bit we did a lot of work making electronics accessible and you know everybody it's it's a big success if you look at this conference you can see uh really it allowed kids and teachers who are not would not be doing embedded programming to to go and do stuff now one thing we've noticed over over the time is that the accessory story could be improved so we we have a great ecosystem of accessories for the micro bit if you go to the accessory page you see there's dozens of dozens of them um but they are not always consistent in fact some things would be improved some of the problems we heard from educators when we started talking to to the users what it's somehow sometimes difficult to figure out where the code is for a particular piece of hardware you purchased so the students don't you know obviously they get lost or they load the wrong library or so forth so that's a problem you see in the classroom and any problem classroom gets amplified by the number of students the other problem we saw that was that the block terminology the way the blocks work the assumption about the block was not consistent across across multiple vendors and that and the reason is you know it's multiple teams multiple companies with different kind of habits building these extensions but that creates problems in the classroom because you kind of get you build this expectation and how blocks work now they don't work work the same way a big issue with third-party accessories and this is something i worked on for a while and we really tried to fix is that it's really hard to bring first class simulator support for every accessory out there in makecode you know we have neopixel support and we have a few of those like servos we're popular but there is a ton of other accessories we just don't have simulator support for and that means you're now you don't have this great tight feedback loop when you're coding and it makes the experience much less uh much less easy and also if you don't have the hardware then you can't even try your code so lack of simulated support has always been something that was bothering me and you know and there's so much different ways to talk to hardware out there that it's not feasible to just add more and more simulators and on the other hand we just can't import random code from internet that people wrote because this would be really bad security-wise so we were stuck in a way where we had some support for you know kind of the major accessories but for many accessories out there uh you don't have super limited support and that's something that jack dac is going to solve for you the other thing that we noticed is that um well electronic cables were designed for electronic engineers not four classrooms full of kids who want to rip out the cables or chew on them or you know what not or stuff them so we we tried to use historically in jackdag we tried to use uh the good old audio jack the 3.5 mil or the jack it turned out that there were a lot of electro electrical issues with that so we we decided to create a new connector and a new cable that not only is friendly to students but also friendly to manufacturer because it is very cheap to add to your site so this is the background on why we built jackdack and now what i'm going to show you is what jack does that jack jack does for you and let's start with make code now jackdack is a general purpose protocol to talk to hardware it can work with me code it also works with no typescript javascript python uh any other software so what you're going to see is a lot of make code today but uh it is not limited to that so if you buy jack dac hardware it'll work with many other environment what we built is a school friendly cable and connector i'm going to show you that we have a integration in my code that is in beta stage right now and we're definitely looking for feedback on on how it works we will auto detect hardware load the blocks for you and also we provide full simulated support inside of mid code now without further ado we're going to go for just a very long demo time so that's that's kind of the fun part we're going to show i'm going to show you the hardware i'm going to show you what we call the jagdag dashboard which allows you to kind of see what's what's going on in jackdack we're going to show you may code and then also just for kicks we're going to do a p5.js integration if you're familiar with processing this kind of creative coding environment p5.js is the online javascript version of that and we're going to see how we can use jackdack in there all right let's switch to [Music] demo time i'm gonna bring out my uh my hardware cam swap this all right so this is uh this is live uh and this is actual hardware prototypes that we have for jackdack now your question is can i get that too currently there is no jack dac hardware on sale however we've we've released all the schematics uh today and we will be talking to accessory vendors i have some slides for the accessory vendor so stick around to uh get jackduck into the eca system so what do we have we have a micro bit v2 jack dac only works on the v2 unfortunately we couldn't get it to work on the v1 we have this cute little thing called the adapter now if you look at that you'll see it has these teeth you know these these teeth here this is the jack duck connector it is built straight onto the electronic board we call that a pcb edge connector and you know it's meant to be very cheap and now the new things we have is these beautiful cables these cables are they're made for classroom they're made to be so what they have they have reversible connection because this is the iphone generation you know you don't you don't want to figure out whether it's one way or the other just plug it in it works they're made to be brutalized you can pull them out or you can just you know wank them out you can do that a few thousand times before they'll wear up so this is really good for classrooms because as we know students not not always are the most gentle with our electronic you know pull them out the other thing that's happening with jack dac is it is a bus meaning you can just connect it wherever you want just like usb if there's a slot open just put your device it doesn't matter it doesn't matter where you put it because then everything works and also that means you can daisy chain stuff so if you if you bring a for bring a slider here well the slider exposes a second my auto focus is really struggling a second one and you could just daisy chain the next one and keep going like that jack duck provides power so you don't have to worry about power as well all right so what we're going to do here is we're going to play with the micro bit so the micro beta has a little app that we call the it's called the out of the box experience because there's a kit so i'm going to plug that in and now i'm going to plug a button so here's a button oh here's my button here it is hiding so we have a a keycap cherry mx button you can see it has um here the little connector here so i'm going to plug it in with my cable and here i'm going to plug it in randomly in the middle i'm trying to do that we go and you could see that the micro b told us yes there is one device connected and in fact if i press on the button i get a sound and an emoji that's how that's how we program our little app here so i'm gonna bring a second button but um it is it doesn't look the same at all it is this button is um it's just more of a it's not so much of a keycap but it is still a button that means it behaves like a button you can click it you can have a down event an app event or let me get some cables all right so let's plug this in and randomly somewhere now the micro bit says yeah you have two buttons so if i click the second one you can see that i have a smiley and if i click the first one you can see that i have another device so how is that working jack dac will devices will advertise themselves and will tell you know will tell us oh i'm a button and uh this is my name and so we can kind of detect that and and handle that and also if you swap a button for another let's say you lost that button but somebody else sells another button you can just use it so if it's a button you know it's like if it's a duck and behaves like a duck it's if it behaves like a duck it's probably a duck so if it's a button you can interchange them and so forth and for example we have one more prototype of a button here this one has two uh you know you can screw cables in and let's say you can build like a button out of a button you go buy at your hardware shop all right so this is a fun one if i put a slider for example let's bring our slider here um see that now if i'm moving my slider we've actually programmed it to change the leds on the thing and again this is dynamic that means if i unplug it eventually i lost the device if i plug in something like let's uh so i have here a plant and in that plant i have this one i have a soil moisture sensor and i have a temperature sensor probe here the temperature probe goes to a jack dac module here and i'm going to connect that into into my jack adapter all right let's go back here plug it in and i'm using that super cool font that lets you show two numbers on the jack deck screen so what you're seeing is uh it is 19 degrees celsius in my plant right now i don't know if that's good or bad i'll assume that's good i need to return i've used that plan for demo then to return it alive so that's a temperature sensor and then we get rich data we know what the temperature is and so forth now let's take a look at what this uh what jack dac looks like when you're actually uh playing with that and what i'm going to do is i'm going to go to the jagdag website before i go to make code and this is a this is a website this is aka.ms jackdack and this is what we call our dashboard and what i'm going to do is i'm going to connect to the micro bit i'm going to click on connect and what you see now is that i have a view on the hardware so this button here is one of those two in fact if i want to know which one it is i can click on the name here and it's going to start blinking one of them is going to start blinking oh you see the blue the blue blink here let's see so that's an identify thing so it says oh yeah ah that's me it's me on the screen in fact it looks like the picture so so that helps um close thank you and this is a twin of the hardware if i press the button you see the press button and i see it on the hardware so this allows me to see i mean it's obvious that i'm pressing the button so that's great but uh if you look at the temperature now i can see that it's 19 degrees i could also you know chart the data to see if if things are changing so if i if i plug in now my i'm going to plug in my my soul moisture sensor and immediately we get the slow motion sensor in fact if i'm if i'm pulling it out from my hardware and moving it around or you can see that the reading changes and it changes live and we read it live here but also we see it live on the screen and this dashboard we built this dashboard for a reason because this is going to be the building block for the experience inside of make code we're going to use this particular dashboard with a bit less of ui elements as a way to show the state of the hardware and these are basically our simulators now one thing that's very important is that let's say i don't have a soil moisture sensor so let me say i'm gonna unplug that unplug that thing and jack dac is gonna detect that the device is gone what i can do is i can start a simulator i can start a virtual uh soul moisture sensor so we've got some shortcuts here so you know i can click on the shortcut but if you want to uh select one of those we've got a bunch of um of these around so this is a virtual soul moisture sensor it only exists in your browser but if it's virtual that means you can actually change the value so you get a you get a little a little slider and you can go and this is great for testing because you know if you're testing code that's supposed to run in the fridge you don't want to be in the fridge you want if you're testing code where it's raining or there's too much water you can't do that with your plant you would have to so this is very helpful and of course in the classroom where you don't have enough hardware this is essential to have simulators you're going to see that this is going to fit straight into your makeup experience and of course you get you know you get all the charting and so forth in here you can spin up as many simulators as we want there's some really fun ones you can simulate you know kind of gas detection and so forth so this is all running in the browser and this is using web usb so there's nothing to install um there's no it just works straight off the bat all right um let's switch to make code shall we and uh show how this experience fits in oh one thing i forgot to mention is that these this is prototype hardware we also have ideas about 3d printed enclosures so we have little helpers that generate those and then can print that and then you get it protected but this hardware is not available but the schematics are available for people who sell accessories let's go to make code so this was a dashboard this is a separate website from from makecode it's kind of more of a neutral way to kind of play around with the hardware of jackdack there's a few features in there like data collection and so forth but we'll not cover that today all right um switching to make code and here we are in the beautiful make code from microbit i'm going to create a new project which is micro bit live jack back and there's a question whether this is available or not and the answer is um the answer is it is available so all the software is online and in fact you can use whatever i'm demoing today as far as uh the simulators this is all nine you can try it out however the hardware is not on sale yet because we just uh released we just open sourced our schematics today and hopefully uh we'll be working with uh accessory vendors to integrate that into their product if you're an accessory vendor stick around i will talk about what you can do all right so i'm in my code as usual what i'm going to do is to start the jagdaq experience is to add an extension you know our beautiful extension here and i'm going to type jackdack press enter and uh you'll see that there's one match this is our library and this is the only library you need to add through the through the ui the rest is going to be automated we add a new category on modules we didn't want to call it jackdack because typically it's hardware modules and when you look at this there's not a lot of interesting uh blocks because when there's so many accessories out there we don't want to preload the blocks we only want to load the blocks that you need so based on what you're trying to do based on what you're connecting we're gonna we're gonna need that i'm gonna go back to this website and disconnect yeah okay i'm disconnected um let's start with an experience with hardware so there's going to be two experience i want to show the experience where you have hardware and in this case what i'm going to do is i'm going to plug everything and just keep a cool device called a rotary encoder all right rotary encoder here attached i'm going to i'm going to secure this one there we go so that they don't move around too much all right rotary encoder is in place and what i'm going to do is i'm going to connect the micro bit through my code connect device next next connect connect done and what you're going to see now is that we are seeing our hardware device here in the code and just like we were seeing in the dashboard i can change the hardware and i can see visually that i'm doing something with the hardware all right so what i'm seeing too is this button here that says hey do you want some blocks which is great because kaching catching i don't have to figure out which blocks i need to do i just click the button i say yes i want all the blocks for my hardware that's connected to my system right now so i only get the blocks i need not every possible block that that's out there and now what you can see is that i got my button blocks and my slider blocks interesting oh oh i put rotary encoder under slider you know maybe that that's dubious but you know this is the rotary encoder and then this is the button so if i grab my button block and uh i decide to show something here like a heart we're going to start with let's start with something like this and when you press down you get hard and when you press up you get something else just a quick quick example something like that all right so make code restarts i'm going to press the hardware button here and you can see that we get the heart and then no heart so what's going to happen what's happening here is now how does this work we got a hardware button here and we got simulator support now the hardware is doing something weird is scrolling some text so this is a this is what we call dongle mold dongle dongle mode um the physical micro bit does not run your code right now what it does it just transfers the data into oh let's see if i can do that all right so and then goes into into the simulator okay that was hard all right so this is in dango mode which means you're actually running because you can only have one brain and you can only you can only have either the simulator or the physical micro bit running your code not the two of them are they're going to fight so right now the simulator is running and the the micro bit is in dongle mode now if i download i'm going to hit download here and it's sending it to my micro bit the micro bit hardware is going to become sometimes it on the first download it sometimes complain this is and i can see the dot now what's happening is now my micro bit on the physical micro bit is running my code and my simulator micro bit is in dongle mode and the the logic here is whoever starts the last becomes uh becomes the brain and all the other ones becomes uh jungle mode so why is that cool because now it's my physical microbit is running and it's ignored by a simulator now as soon as you make a code change then you basically have the simulator who's controlling controlling the scenario and and here's the the dongle mode it's it's a bit tricky uh we're definitely looking if we have if you feel that this is very confusing we're definitely happy to talk about it we we haven't figured out a better way to handle this fact that we have two brains on the on the system uh because now we really have a connection between the hardware and the simulator all right so uh i can also do the the rotor encoder and here i can have an event when it changes and for example uh what we can do is uh what we're going to do yeah we're going to do a forever loop forever loop and read the encoder value and and put it into the showback graph all right that and then go back to the encoder boom and now that means when i'm turning my encoder you can see that it's controlling my screen and that's all nice now one thing that's happening is you're in a classroom so this is the scenario where you have hardware now what happens when you don't have hardware so that means it's all gone table is empty you have no you have no jack dac i'm just i've disconnected it so there's no more hardware and snip sniff there's no more simulators uh here look here no more but this is where the simulators are key because what you can do is you can go and select them and say oh i need uh i want a button or you can take the shortcut and click on this button here it says just give me all the simulators that my code needs and it spins up a rotary encoder for you and a button and in fact if you see the names here the names here match the names here and we call that the roll that means we bound the simulator to this variable here how am i doing good time um and if i move that then i can actually test my code so you can do a lot of the jack dac development without any hardware in fact we provide simulators for all the services that we've specified whether it's a button like here so let's get let's get the forever up whether it's a button whether it's a slider uh we have you know if you think about the soul moisture we have screens there's a lot of cool stuff there if if their service is missing we can add them there's uh there is a new infrastructure that makes it much easier to roll out uh new simulators and new experiences um all right so this means that when you're when you're developing with make code and with jagdak you can do all your work without without hardware and you can simulate everything and this is huge that means you know if you're bringing in a temperature sensor this is always my you know my my favorite example and you're you're measuring temperature and it's outside i'm going to add the blocks yep thank you thank you for the blocks um do that and here i'm gonna i'm gonna grab the temperature uh here i'm just gonna chart it just like the other just like the other time i did and you know this kind of classic way to show data actually let's do something else what we're going to do is a little event here all right so we're using the thermometer and i'm going to ask jackdack to come on to start my my simulator now i'm wondering now what's going on with my temperature sensor and you can see that we've got the console coming in so what we also do is we we send sensor data into the mic code console so now you're seeing you can chart sensors and data in fact if you're connecting a physical device so i'm going to connect my go back and here connect my so i've connected my soul moisture sensor and i'm going to connect my ooh something's going on it is definitely unhappy dongle mode come on my demo my demos having issues because i'm my simulator here is not is not happy at all are you going to really reload it okay maybe i need to download my program oh there we go all right so i got my data here and now i can see that oh where's my where's my physical data oh is this is this no the simulator is gone all right so so that seems to have a little issues but normally you should be able to look at the hardware data so we also want to integrate uh the data exploration of what's happening in your sensors inside of make code all right i'm gonna i'm gonna pause that demo now and i'm going to go to p5.js so what's going on with p5.js it's a cool environment where you can uh let me go and and unload this i need to make sure the make editor is not locking the usb device and this is p5.js it's a creative environment for javascript and in this case what we're doing is we're we're grabbing the sensor this runs in a loop draw runs in a loop we're exporting uh rgb as numbers from three potentiometer and then we're setting the background of the screen and five minutes left all right i'm gonna go and uh hopefully my little micro bit wants to connect again somebody's locking the micro bit somebody's locking the micro bit it's it's a problem with all these pages that are using the micro bit one of them is locking it see if we can get it to work otherwise we'll have to oh well it seems that my demo gods are against me but normally you should be able to run the p5.js demo and this typically doesn't go so bad because you don't have five pages trying to connect to the microphone all right i'm going to come back to the slides i have five minutes left and um i'm going to talk about where we're at with the roadmap uh what you saw that we have make code we we run a make accessible pilot inside of microsoft james devine talked about it yesterday so we did a big uh big test we have make code data javascript python support out there we've open source the software the firmware the hardware if your hardware manufacturer all the altium kicad eagle stuff is out there our goal is to get the makon integration stable and ready by the next big release typically around june we want to start piloting with teachers asap uh if you're not yet applied to the champions try to get registered if you're a manufacturer make sure to send us an email jackducktap at microsoft we want to talk to you and see how we can help you integrate and jack dock into your into your devices manufacturer slide um let me hide that what do we have we have a ddk a device development kit which has schematics for you we have a large library service classes we have firmware for stms and other popular mcus we've got all the web-based debugging and tools what you have to do is if you want to use jackdack integrate integrate the connector into your hardware use our use our drivers software or use your own um valid that it works with the with the dashboard and you're good to go uh talking about how to migrate your your modules typically jack that can be single purpose modules like we've seen in my demo these are all like kind of you know there's there's one a slider is just a slider but there's also a huge ecosystem of accessories out there and what you could do is um hot add jack dac to your accessory we use pin 12 on the micro bit which is a pin nobody is using so you could connect jack dac to do pin 12 add the usb connector and the circuitry that's needed and then basically you would have an extensible accessory for jackdack what you can also see is that the device we have here the adapter is not passed through but you could have a different design here that actually exposes the edge connector as well so that you would have both jack dac and regular uh regular jack dac integration since jack dac only uses pin 12 it is compatible with all other shields out there and this concludes this jackdack presentation because i am running out of time yes this is the last time and uh one minute left this thank you so much for um for attending if you're a champion of alumni please send us an email at jagdabtab as well if you're interested we really want to pilot it we're looking for your feedback especially around the make it integration um and again this is all live as far as the software uh you can try it out the only problem is we need to get hardware out but that's that's gonna come soon and that's it i'm done corrine oh this was unbelievable seriously this rocked so thank you very much billy i we uh i know at fair chance learning we're going to connect with you we just think you have changed how the classroom all over the world will you know become so much more user friendly for students i love the daisy chain effect uh if you would everyone please click leave session and return to the session to move on to your next session of awesomeness and have a great rest of your micro bit live event have a great one again pele uh you rock i'm so glad you're my neighbor we have to talk bye everyone and enjoy the the live sessions bye so you