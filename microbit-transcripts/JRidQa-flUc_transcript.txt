micro:bit LIVE 2021 | Transition from blocks to textual programming
https://www.youtube.com/watch?v="JRidQa-flUc
lovely thanks ever so much for joining us and from all over wherever you are it's always fascinating when i see where people are from so please say hi in the chat let me know where you're from because it's lovely to get that feel for who's in the room um so my aim for this session is to have a look at that um that move from blocks to texture based programming how to switch the view what can we edit where can we start look at having to use the debug mode so that we can see that viewing the code and the code steps using tutorial so we can use that simulator using commenting moving to micropython and then using uh classroom and some strategies there for that textual based programming so i'm going to jump straight into this and start by looking at that switch and how to get from block based into the textual base programming so make code obviously allows students to see that switch very easily and we can pick things out that we can actually start changing and editing now i am going to make the jump and keep switching my screen in between looking at the actual platform so from here i'm just going to jump straight over onto my onto my first tab here so we've got that program here something very basic obviously just to start off with but when they're starting to think about how can we actually look at that in python we can actually go straight up the top and flick over to look at the python view and what we can do then is start to look at well what could we possibly change and the nice things to start with is really to try and understand what that individual lines of code do but obviously the first thing to think about is where that image is displayed now the heart is what is going to be displayed on the screen of the display of the microbit but we can change that very easily to another symbol so let's go for sand and what happens over here now is that we just get that play so if i press play just to move that program over onto the simulator i can now simulate that there and the nice thing i can do is go back to my blocks and it has changed my blocks as well so i've got that scaffolding there of not being too sure whether i'm changing things right but can go back and look at the blocks and get a bit of reassurance but also going backwards and forwards to actually see what it's like could i add in another little bit of code underneath what would happen if i put something else in what would it look like on the actual within python could i actually then add another line of code underneath and building it up slowly checking it back with that block based and again it's that's that slow transition through to using the textual base but actually like by making those small changes i'm just going to go back to my slides and uh and i've got obviously here is all the different images that you can change within the uh within the python side of things so it's uh and i've got a list of all these and i have got that to share with you but all the potential options that you can change because it's quite nice to have that in front of them if they know what they can change right from the word go so the next thing is using the debug mode to really step through the code because it's really important to know what line of code is actually being run as you are running the program one in blocks but then when you go into the textual base looking at the python which line is being executed at which time and again that can be done nicely within the debug mode so i'm just going to go back over and just go to tab two i've got this one set up by clicking on the debug mode over here what i can do is i can click the a button to run my program but if i click the snail button here which is slo-mo and what it'll do is as i press the a button it will slowly run through that program so i can see what it's doing step by step if i turn that debug off and go through onto the python it runs slightly different again if i click debug and i'm just going to click slow press the a button and it started to run through and you can see as it's going through the steps that it's running so again it's that being able to actually see which line of code is being run at which point to be able to then see and work out which block potentially goes with it but also start to understand what each line of code is doing and i think it's really really key for when students are learning how to use textual based programming is that slow buildup of what does each line of code do and then that allows you to trace that algorithm trace the program and work your way through it let's go back to my slides and again using that within um loops can actually help to understand what that is as well because obviously when you start looking at the block based you get the repeat four times we get that's the repeat block comes up loads been block based obviously when we start moving to python that's a for loop so seeing the difference and again seeing how that works that it works in the same way is easy to do within the um with the debug so again we've got that program set up here if i click onto the debug with the snail and i can see and the nice thing here is it actually shows within the index how many times the loop has run so we've gone through it once and it will run through again and it runs throughs and then increases it here so i can see that loop working the same if i go on to the python i'm just going to go on to there again click on the snail and you can see that it's working through and again it's going to tell me here when it's work works through each time each of those iterations so again the students are able to see when each loop has been run making it quite powerful for them to actually understand how a loop works and how many times it's going to run and how the how the program actually remembers how many times it's running by using a variable so i think that one is really interesting to do i just go back to my slides and the one thing as well is obviously we know that when we start looking at when we go into just using python we don't have the simulator anymore for the micro bit the nice thing about obviously when we look start looking in mate code and doing this transition and using the tutorials there is that we do have the simulator there to help us with that first steps into looking at the textual based programming so the if i just move back over we've got when you get the tutorials up it gives you that line of code but you've got the simulator over here to allow us to actually build that up now obviously the other thing that i quite like is you can't copy and paste the code here so they are actually forced to write it out now it is slightly different um when you move into actual um i've got capslock on sorry do you apologize um when you move over into um using pure python and micro python with them with the microbit it is a slightly different syntax than you see within this uh split view and using it within mate code but it is about making that start about starting to think about how it works how it looks looking at the syntax and picking up bits of how how the whole system is structured so obviously there we've got that first bit it's i've added it in i've finished that step so it's simulating it because if you jump straight into using micro python with the with in their platform with the python you haven't got that simulator and you're losing that little bit of a step that they need to help them understand what the blocks and the text is doing together and going backwards and forwards is really um is needed within that transitional stage so having this here and the tutorials as well are great so you've got that platform within mate code where you can split the view really easily the tutorials that allow you to build up and practice typing in the code as a as a next step from changing a few bits within the code so that's a really good one to to use as well the other thing that i think is really important as well is not just the use of the programming language is the actual commenting now commenting is so important and i think it's something that's underestimated within the education that it needs to be done it is an industry standard expectation they are expected to comment within their code if they become a programmer they're not 90 of the time they may not be um working on their own in a program they'll be working with others um or they may be working on something on a longer period of time so being able to comment in the code helps them to understand what the code's doing but also helps you to understand what their understanding of the code is where their gaps in knowledge any misconceptions and the nice thing that you've got is obviously the um is that you can pick it up in both sides of things so again if i just go back over onto an example i've put a couple of comments on here obviously within the block based code um i'm just going to minimize those for a second so straight away i can see on this i'm just going to enlarge it a second so you can see it a little bit clearer i can see that there's a comment already added onto that block by looking here and obviously i can click on that to actually expand that out if i want to add something on so if i want to right click on this block and i want to add a comment i can add something on this will display a large diamond choose a real one but there we go um and that adds it in there so we've added it in if i flick onto the python switch onto the python view we can see those um lines of comments in here as well and that is the hashtag that defines what the comment is and students understand then that a comment is actually looked over that it's not a line of code it's actually something that the program knows to actually jump over that but i can add that in in here as well so if i wanted to add in another little bit here so i might at the end of here i'm just going to put hashtag this is the this is the a button i'm adding that in within the python view and again if i go back to blocks it's going to add that in here as well so i think i added that on honestly i think i've already got one on there so it's put it underneath so it might be on the second one that i think it's only one that's viewed on there so i think i've put it where there already is one so let me just pull that one back and i'm gonna put it somewhere where there isn't one and this will delay before and if i go back hopefully that should then appear here we go onto this one here and this image will delay before the next image so by adding in those little bits of commenting again will help with that transition of moving through they can see where the blocks are they can see where the lines of code are and actually can actually see then help with that transition of learning what the program is doing help with showing that understanding and moving through so then moving to micro python because obviously that's in mate code we've started looking at main code we've looked at how to like change certain things and then it's kind of making that jump into the new platform where the programming syntax is slightly different and i think that's really important when you if you do it this way the students are going to suddenly go hang on we used a different way of writing how to display an image in mate code it's a different platform so because the mate code uses a simulator it is a different syntax so this is purely using python within this environment so the other aspect is that it always comes up with that while true again giving them that understanding of why is it always while true on there and that's kind of saying the same as well when started in make code so you get that default program and i will share the link to that i've got a micropyth microbit python get started guide that can be used which shows all the bits that can be changed and taking some of the code off the microbit website to kind of put in a double-sided sheet that students can but yes it is different and that is something to be aware of because if i just go back a slide if you look here on you've got basic dot show icon icon names.diamond if i go onto the next one it's display.show image.heart so some things are slightly the same the fact that the syntax has to be in capitals the word for the image is exactly the same it has to be in capitals but the actual line of code is different and that's something to be aware of if you do make that change obviously as you're moving through so that's why it's important not to stay inmate code fully but use it as a transition use it as let's have a look at that let's change some of the words that what what can we change there what does each line do but then moving over into here and then you can kind of see that the syntax in full so then it's kind of like well how could we use it how can we actually start them to think about what's in um that they're viewing and the programs that they're looking at to help them understand with that transition again so start with sequence in then you can take out that while true and we can just have a program that just runs right from the word go and just a simple step through so this here is um just as an example so this is an example of using prim which is one of the pedagogies predict run investigate modify and make so this is like so starting you would have a program that says predict what this is going to happen what's going to happen if i run this program here so before they get it in front of them he's showing that program to them what will happen when this will run and then we'd look at it and it's about reading through that program understand what's going to happen when they download it onto the micro bit and get that running they would then run that program to see what actually happens and hopefully they would have got the fact that it is a happy face followed by a sad face and that it holds for that time delay in between understanding the importance of having that delay what happens if it doesn't if it's not there all these kind of things then fall into the investigate and through that investigation is where they start thinking about well what not actually changing anything but looking at it and really trying to break it down so it could be well what does what is the sleep line of code there but it could be a debug now on this one here it's got this program has an error can you find the error and on here if you can see the error pop it in the chat it's always nice to see if people can see it as well and but there is an error in that syntax there and it by by looking at that error they are starting to understand the syntax further they are going to start thinking about how they need to write it absolutely bianca no capital letters unhappy and sad and that is something that's really key in using this that it has to be in capitals so by pulling that they're investigating it and then in the modify they can go in and actually fix it so again um i've got that set up here so what they've got there is they can then open that up and actually go in and change that so they're actually starting to modify the um the program to get that to work and then they would then connect it up and download it to actually test that out so by modifying it they're then starting to understand it even further before they actually go into actually making something of their own and then they could obviously move in to say right well can you come up with a sequence of images of your own and have a and use some of the different ones that are there again building it up slowly to help them to understand what each line of code does another option is using um lots of different things like parsons problems are one option that is a really good one to do if you've not heard of that is um is it's a way of kind of giving them the building blocks to be able to then create the program so it could be that like this one at the top right and which i'll show in a clearer in a second is where i've actually commented out all of the lines of code at the top not in the right sequence and i've given them the start of their of the program down the bottom for them to then pop that and work out which lines of code go where against a description of what i want the program to do so they would need to uncomment by taking out the hashtag and then cut and paste in the lines of code and move them into the right sequence it could be again done this one here on the right is that again i've got three options at the top that are commented out using hashtags and then i've put hashtags into the main code where they need to put those those code that those individual bits of code in to help them to understand where what goes where um and actually build up the program themselves so i'm not throwing them in the deep end and saying i want you to write a program that's going to do this do x y and z i'm giving them the building blocks to help start build up that program so they're getting the knowledge there same again on this one in the middle is you can add the code to display can you add the code to display a ghost so i've got that there and all i've done is commented out one area but i haven't given them the building blocks this time i said this is where you've got to pop the code can you go and pop them in there so again it's building it up depending on the level that you've got them at obviously i wouldn't throw them straight into writing the code i would have given them the building blocks first but for those that are obviously moving on we can start to look at that there and one of the things that you can do if i just go back on to my view over here um is this here we go is the example there with actually all of these lines of code here are just commented out and can be popped down here by lit by just copying and pasting so i can just cut that out pop that in wherever i want it to be and i'll pop it there for now and i've got that now added in as a bit of code and i can move that around using commenting to add the description is really useful now i've got this within micro bit classroom because i can set that up then as individual tasks that i can then use within the classroom i could on python editor save the file by just downloading the python script that i can then save and share out with students or the hex file whichever way around you want to do it and then they can open it and use it that way but microbit classroom allows me to set that up and actually have it ready to give to a student so i can set up my classroom here and i can share my dashboard with students for them to go on and actually be able to see what they're doing as they're working through it if you haven't seen a microbit classroom before it is a great extra tool and by going on i'm just gonna join this classroom here purple mouse car gift and i just purple mouse car it's always tested tests my memory when i and when i have to do this one really quickly i'm hoping this hasn't needed the need to be refreshed so we've got clouds up there we go so at the moment i can't see anything but as now as the teacher i can go back on here i can see that i am logged in i can go on to editor i can share my code with students i can see which students are up so i can differentiate having different classrooms if i need to and i've sent that out and now i've got as a student i've got that available and i can start working on that but the great thing that comes with that is i can actually go on as a teacher and look at the student code and see how they're working on it and see if they're making mistakes you ask answer questions support them and guide them through that area so using classroom and layer is a really great tool to be able to help them um with that transition because i can see what they're working on as well as them working on the same problems or differentiating it across the classroom with different tasks to do microbit classroom itself is really easy to set up you've got its classroom.microbit.org and all i need to do is go in and set the name of um of the classroom i can set it as mate code or python make code obviously has a simulator in there but you can't switch the view to python in the classroom it is purely block based on there or i can go on to python and then that's where i get the editor and i and it gives you it always opens with the same default program so it's a good starting point but even on that one all i could i could put the you can't add instructions on here so adding in using commenting is a really good way of actually adding the instructions so the students have it in front of them and can you change the image displayed and then i can share that with students by using the dashboard there the only thing to remember is that if you download because i can save that classroom quite easily by downloading it and then reopening it the dashboard information changes every time you open it so something to remember there now i have um on on here and this is a um all videos that i have got on how to use classroom but there's that micro bit get started sheet um cheats cheat style sheet i've called it and all it is is a document there if you can see it hopefully if i just zoom in the last of it there we go so all i've got is i've put it all on a document off what can you change so i can change the word happy here to any one of those there so it's giving you all of the images that are stored at the moment within there to use um you've got little snippets of code all straight from the microbit website of their examples of how to use it i've just kind of put it all into one place and then again what can you change within the music and the how to do the brightness this the speaker and i have made it clear which ones are version two on there that that are linked with that side of things so it's a nice one to get them started on there with using that in the uh in their environment so that is on there i have got a little daft little sock puppet that i did with the micro bit on there as well as some bits with extra um extra resources that um that i use like the uh the robots and stuff and a bit of a a board game that uses up as well that can be used and build across um so i think yeah so i've gone through it fill in the gaps you've got that reorganize the correct sequence start of code to build on debug tasks so again you could literally just set up a program that's not working and and ask them to try and find the errors and fix it for you and all that's there to actually help them and all these steps will help them understand the code before they actually jump into creating their own programs and i think i've done that within time on that i've gone too fast or am i all right on time but please ask any questions is there anything else that i've missed anything that i can help on um please ask away um i think i might have got a bit fast on one of those bits so if there's something else you'd like me to show please ask