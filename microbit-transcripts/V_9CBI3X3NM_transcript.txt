micro:bit LIVE 2021 | Working with bits on the micro:bit
https://www.youtube.com/watch?v="V_9CBI3X3NM
that's great bob thank you so much for that introduction oh you're welcome pleasure to be able to talk to you this evening about the micro bit so england was like one of the first countries to have the micro bit it was a bbc project back in those days and this was rolled out across the country one of these lovely things was put into the hands of every 11 year old you can imagine what's going to happen with that a lot of them just end up in school cupboards that the schools don't hand them over the ones that do get sent home i do worry about how many of those actually got used it was a wonderful idea in principle but in practice it seems so much more practical to do this in school yes it's lovely when children go take the micro bit and go and make something amazing with it but think about ways of integrating that into the curriculum as bob mentioned we put computing on to the national cricut as part of the panel that drafted that here's the text that we came up with i'm just checking that the screen share works so there's a lot here about cool practical programming key stage three is um 11 to 14 year olds so this is the target age range at least in english terms for the micro bit and so you know there is lots of stuff that you could do with the micro bit you get then these weird bits going in there about what is this understand simple boolean logic for example and or are not and some of its uses in circuits and programming you've got to wonder is that really the sort of thing i want every 14 year old to to have an understanding of maybe understand how numbers can be represented in binary and be able to carry out simple operations on binary numbers isn't this exciting okay and this tends to get taught in a very theoretical almost like a maths lesson sort of way of just working with converting numbers from one base to another i think there is a tremendous synergy here between that lovely box of the micro bits somewhere in the computing um lab covered and the requirement to teach this stuff which could come across as really quite quite dull so let's have a go at seeing how we might get on with that so i'm going to clear the screen to start off with so let's just pop that into my um start loop and then let's have something happen when i don't know button a gets pressed i'm just going to write some code here and then i'll just pause for a moment and see if people can figure out what this is going to do let's create a variable i'm going to call this x because i once did a maths degree and we always were trying to find x so let's set x up not to be the intuitively obvious zero there but let's go with a four to start off with and what we're gonna have going on here is a little loopy thing while the led oops sorry led at point x i'm going to go for 4 again whilst that's lit do something in fact specifically turn that little led off um so variable x again let's pop the four in there and then the very last oh we've got to keep decreasing x whilst we're doing this so let's change x by -1 and then finally when we get to the end there let us plot the very last of those so plot whatever x has got up to and again using four so here's a moment folks okay we're supposed to one of the pedagogies that we're encouraged to adopt now in english schools is this this idea of read the code before you run the code so if i was teaching this for the class i'd say okay here's this weird program is there anybody here who can predict what it can do i can't see anybody putting their hand up but you could type into the chat there okay anybody any ideas what this is gonna do if we run this nick and pauline and rachel it's lovely to have you here it really is yeah this often happens with these these video lessons nobody types in okay so once we've made a prediction we get to run the code and i'm hoping i've not made any mistakes in here let's see what it does click button a and a little led comes on how exciting is that let's click button again oh and another one's come on actually that one went off and now i've got two of them on okay that was like three of them on so that's thank you rachel move a dot down not so much move your dot across nick but you should i hope let me reboot the thing recognize this pattern here one so we have now a binary counter as if by magic and you know pausing for a moment or two figuring out what how this magical code works is quite fun i'm only able to count up to 31 with this i guess let's wait we could go on i have however got five rows on my lovely micro bits screen here so why not add in a few more rows of this so let's pop another variable up here uh make another variable i'm going to call this y y you might say well you know um and we're going to set y up as 4 oops not five four at this point and this time let's have that y in there and in there and in there okay and this time when we get to over to the left hand column when x hits zero there first column is column zero we're going to need to do something so i've got a little logical test going on here if something happens to be the case let's do a little comparison here if variable x actually is less than zero because we have got a column zero but once it gets to less than zero then let's reboot x to [Music] over onto the right hand side there with column four and let's change y this time by again minus one to move up the screen fingers crossed focus the moment of truth okay so we get to um that's 16 24 31 what's gonna and i move into the next row of the screen there and there's a little exercise for the reader there as to how big a number could you display on screen hey google what's 2 to the power 25 okay so somewhere in the region of 33 million i've got a counter here which would count like half the population of the country sorry nick okay if we wanted to do that now this counter thing is moderately useful so during the whole lockdowny thing that we had here there was people at the entrance to supermarkets carefully counting the number of people who went into the supermarket using technology no more advanced than this sort of device here and you kind of want to keep track of the people leaving the supermarket because you know people sooner or later left the supermarket as well so do we want another another button here two input things which would actually count down so if i were to press button b i want this to count down what am i going to have to change here to make it decrease okay that's strange light is more waitrose than the nightclub but there you go okay well probably it's just the opposite of what we've got going on here at the moment so let's take that plot out let's take this unplot out and swap those over okay and that's looking good it's not quite the opposite because i had whilst the point was lit and this time i probably won't if i'm doing the opposite i want whilst the point is not lit so um i've got a little not not operator here there's my first bit of boolean logic coming in whilst not that point so but an a increases people coming into the night club for rachel or supermarket for me there's 15 of them eight and four and two and one and then button b that's down to 14 13 12. and you know the supermarket is emptying because there was nothing on the shelves at this point okay so we've got a binary counter there i'm sort of vaguely keeping track of the time that's about 10 minutes in and we've got to the point of binding planet i think that's a fabulous thing for year 7 to do sorry our 11 year old they're supposed to be working with binary they're supposed to be programming but there's a lovely way here i think of linking the two together over on our national curriculum we have this idea of convert between binary and dna of course if they're going to do the exam in this at the age of 16 they've got to have the hand cracked method because our exam in computing they're not allowed to use a computer just pausing for a moment whilst the international audience marvel at that don't get me started don't don't get me started let's think about how we could actually convert this number which you know we've not stored this number we've not been counting up can we just take the number on the display here and figure out some way of converting that into base 10 or dinary as our exam boards here seem to insist on calling it let's let's have a go at this so let's just another input condition let's have oh not what's the button thing let's have when we shake the micro bit can we get the dna number on the display how am i going to do that i'm going to keep track of the place value of the column i'm in i'm going to keep track of the total so far so i'm going to create another couple of variables here one of which i'm going to call place value not palace value place value and the total so far okay and initially we're going to want both of those to be set to zero so set the total to zero and set the place value not to zero the first place that bottom left pixel on my screen here is worth one unit and we're just going to go across the screen here so we don't know quite how many pixels are lit so i think we've got to go through pretty much all of them here so let's start at the bottom um right hand corner so let's set that x coordinate to be four let's set the y-coordinate and just keep going basically so uh we've got a while loop going on here um so while um i'm doing a comparison so whilst the y-coordinate is somewhere on the screen so whilst the y-coordinate is greater than or equal to zero keep doing the following so have a look at the current pixel and then if that's lit increase the total by its place value that seems reasonably straightforward doesn't it so what we're going to do here a little logic thing going on if the led at sorry you love the way i'm narrating this i can tell x and y if that point is lit then change the total by not just one but whatever the current place value variable holds so place value of one let's just move that out of the way for you and that seems to be okay what are we going to do next we are going to increase the x-coordinate so change x to move on to the next pixel which is over to the left so that's by minus one annoyingly thank you bob okay so change the x value by minus one and we've got to update the place value to the new one so change the place value to be double the current place value in other words just add the place value on to the current place value then you've got to worry about that thing about moving on to the next row of the screen here which we did before as a little if then thing i can probably just copy my code here duplicate that pop that in there if x is over to the left hand side of the screen then reset it to the right and move up a row that looks as though it's going to be okay nothing would happen annoyingly so i do actually at this point when i finish looking at all of the possible pixels that are on the screen all possible up to 33 million of the things i would actually quite like to see what total i've got up to here okay this is the interesting moment also just check the chat in case anybody has spotted a mistake in my code let's see how we get on so clicking button a we've seen this bit before at least it's not broken which is a relief and let's shake oh let's do a prediction first this is an eight and a four and a one i make that 13 in old money one three yes okay it worked i shouldn't sound quite so surprised should i oh no but my whole display has disappeared then oh i've got to go back to 13. this is going to be annoying for the people at sainsbury's or waitrose all aware of the supermarket of your choice okay sorry little local reference here okay thank you rachel how can we get it back on screen well there are a couple of ways here i'm conscious of the passage of time so let's do the easy method which is just to imagine ourselves pressing that button after we've shown the number so let's give ourselves a little pause for thought or the microbit a pause for thought how long do you think it needs to think ah just a second all right and then we're just gonna go back and set the total up there so what i need here is a little repeating loop ah for loop coming up next for index from the range naught to total just do all of that stuff i did previously when i do when i press button a but rather than doing that by hand let's make the dumb machine do all of that for us automating the boring stuff that's what we're kind of doing here there is a deliberate mistake in the code at this point glancing over the trip to the chat you didn't know there would be a test falling and you know there's a lovely teachable moment here about let's run the thing what's the worst that could happen well okay it's a micro bit what is the worst that could happen uh rebooting pressing button a let's pop something semi-random up on screen and i've got oh no i've got an eight and a four and a two i make that fourteen so if i shake the thing one for yes and then wait a second oh but it's put 15 back on screen that's not very much fun is it okay the off by one error is the thing here i'm actually counting up one too many thing here so we need to do a little bit of math what have they missed out the s they've missed out the s here where we're going to take that total and just deduct one from it and let's pop that back into the thing let's run the thing okay popping up a semi-random number on screen let's try and get it up into that second row just to check that that works this is watching miles clicking his mouse pad okay so i've got a 32 and a four and a one is that 37 in old money 37 waiting a second and it has like that seemed to be longer than a second didn't have put that back on screen so i'm reasonably content now that i've covered quite a bit of the english curriculum at this level some of it's using so understand how numbers can be represented in binary able to carry out some okay example binary edition conversion conversion between binary and decimal i've done that bit get it at least okay what next well there is this whole thing there about boolean oh sorry pauline was saying that she was trying to follow and wasn't able to get there let's see what happens if i publish the project okay i'm going to copy that code in um and paste that in and with a little bit of luck you get a working version of this by clicking on the link i'm not quite sure how that ever works but see what hap what's the worst that could happen okay so let's move on to the boolean logic thing here um i'm not going to worry too much about my shake instruction i'm also going to for simplicity's sake take out that sophistication of having numbers up to 35 33 million and just have that top row of this so if i take out that whole moving up a row business from here i should just be working with that um the bottom row of the display i'm actually going to pop this the a button on to the top row of the display and the b button onto the second row of the display so let's just have a quick look that that's working as it should be oops it's oh i think i may have shook it by mistake there okay let's just get rid of that whole on shape thing set button a set button b okay and button a and i've broken something in the process okay so y to be four okay i'm looking at the wrong row okay so y is zero that's the top row and that's four this is one and that's four this is the joys of life coding live demo okay fingers crossed okay so top rows but working on button a next row down is not working on button b at the moment because i did it differently duplicate this so there we go button b is supposed to do this that looks like duplicate code except we're going to work on row one for button b that's looking better okay this is just so you can tell that it's a live performance rather than the recording that i'm playing with you okay playing to you so we've got button a and button b working now let's have a go at doing some boolean logic with this i love the fact that the current version of make code lets me create my own functions i was bemoaning that in previous generations of this so let's create a function here i'm going to call this bitwise because i'm going to be doing bitwise operations and what i'm going to do here is look at both rows of the display there and compute something bitwise on the basis of those so again we're going to use our x variable to track how far across the screen we are so let's set x up to be that right hand row which is row four we are then going to go across one row at a time and create something on the bottom row here so we will do an if then step if an el if then else statement let's do the loop thing while logic the x variable is greater than or equal to zero we're going to look at one pixel at a time and then plot things so as i say logic if and we're going to let's start with doing an or gate here so i'm going to pop in a little or statement for that first boolean operator if um my led point or another led point okay so what have we got going on if point x zero or point x one a lit then i'd like the bottom point to be lit so let's try plotting point x for if they're not or if either if a is not lit or b is not oh if not if it's not true that a or b is lit oh the language is difficult isn't it okay so with a little bit of luck i've got my bitwise function here i'm not actually calling bitwise at all but the point of putting that into a function is that i can call that whether i press button a or i can call that function whether if i press button b so button a and button b should count up and then call bitwise if either the top row or the next row is lit in a particular column then we like the bottom row that's what it's supposed to do okay and hey is there's a problem here isn't there if oh because i'm not changing the value of x then change x by minus one okay so a is still working b is working and look at that bottom row if there's something lit in either the top or the bottom row or sorry first or second row then the bottom row gets lit and that's how a bit wise or should work so by this point your i don't know 12 year old should be able to answer the question hey what is six or nine and confidently give the answer 15 at that point because 6 or 9 is 15 that's what the micro bit says it is so we've done all and with the click of a mouse here i can swap this over to a bit wise and and this is the one that really freaks out their friends in the playground well the geeky one's friends in the playground there's seven coming on there and that's three what seven or three no seven and three and the answer is of course three seven and four four so we can oh the seven was not a particularly good example there that's how there we go so what is i think that's going to be ten or and eight ten and eight is clearly eight because that's what the bitwise operation says it is um so we're doing pretty well we've got a whole we've got binary we've got binary dna conversion we've started to play with logic gates on a bit wise basis here not through storing the numbers but through actually manipulating bits pretty much directly themselves let's go on and see if we can make an xor gate now xor is trickier okay because exclusive or we've not got quite the same facilities um so uh bob can you remind me when i'm supposed to finish this session i think it's 7 40 or to the hour okay yeah so i you maybe have come back on yes you're right okay that's fine okay oh bless you falling let's see how far we can get with this let's have a go at creating a new function this time because annoyingly here's a bit to the micro bit foundation folks how come and or other logic gates are available okay it's not just one or the other there are more to there is more to it than that let's create one ourselves though okay that's rachel we can make one because we've got this make a function code now so um i want to create a function called exclusive or xor for short which accepts a couple of boolean operators the first one called a the next one called b done with that okay how do i define xor here well this is simply going to return a value and we've got that so in my functions i can return a value from this and the return of a x or b there's boolean logic which gets as a way of doing this and you know if it was working with a class i'd make them struggle and think can you come up with the truth table but you know can you combine and or gates in some way to create this for you guys i'm afraid i'm just going to actually just write the code here and what we've got is a couple of things being anded together and they're both ors i'm hoping i've got this right from memory and another or going in the other one and the first thing we do if a or b then typically we're going to have uh 1 for the xor if a is true or b is true then xor is likely to be true unless both happen to be true now how you get that taken out is to do the converse of that so it's not a or not b so our logic for that goes in like that a and okay so with a little bit of luck okay you know what's gonna happen now it's gonna go horribly wrong i should have working for me a not an excel gate of my own devising here so here's my if and we wanted point x one and x zero and x one should be okay so i'm calling it with whatever those pixels are whether they're lit or not lit and if i've got my x4 definition correct we should see an xor coming out of this so that's looking so good so far they're lit so the xor option is lit if b is lit that's lit as well moment of truth coming up now because both of the four bits are going to be lit we should get a blank at the bottom there blank at the bottom of the screen because there's not one where it's one or the other the only time when i've got that is when both are lit there so right okay so there we go we've got an xor working now once you've got an xor gate this looks a lot like the sum of these two numbers let's take let's put this back on here so what we've got here going on it's like the sum of these ignoring the carry so i've got something going on about making some sort of addition thing or i've got the rudiments of addition going on so those two added together typically will give me the sum of the two numbers at the top they won't always because there's an issue with that but there's a there's a sense in which they're a bit wise some of this i need to worry though about the carry because one and zero is one plus zero is one zero plus one is one so xor does that one plus one is zero carry the one and it's to carry the one that i've got to worry about next so i'm going to need to do that as well if i'm wanting to do addition here so let's see if we can figure that that out and naively i might just go for something like um an and here so if they are both lit one plus one is zero carry the one then we'd be okay so let's pop in um again my call to the point duplicate that pop that in there duplicate this one pop that in there if those are lit then my carry digit should be lit so i need to duplicate that and pop some sort of carry row just as you know if we're doing hand edition then that goes up on the next column across so that's not x4 i'm going to pop this up a row and actually move it across into the next column there so let's do a little bit of math with that take away one to move to the left x take away one and we're going to do the same sort of thing for unplotting led unplot okay duplicate that this would have been quicker in the text based language but i would have i'm sure made loads of mistakes for the syntax which is kind of the point isn't it so i've kind of got a sum and a carry going on here okay let's see whether the carry happens yeah okay one plus one is zero carry the one here but i should have a one down there for the next sum so i need to extend this a little i'm going to shrink this code fit it better inside my browser window at this point and i kind of need to nest the xors at this point actually i do need to nest the xors at this point so let's do one xor inside another and this time it's that carry point as well so that's the led point at wherever x is and the carry row which is row three so that should give me a proper addition um that should give me the proper sum the carry is harder because there are loads of different ways the carry conditions should be could be met so you've got that one which is the top two rows being lit then you've got the top row plus the carry row or you've got the second row plus the carry row we've got boolean logic which will sort that out for us but it is a little bit painful here it involves nesting a couple of or gates popping that one into the first of those i'm going to duplicate that pop that into the second of those running out of screen here folks okay duplicate that again pop that into the oops pop that into the third of those and then finesse the detail here so i've got zero row zero and row one i want zero zero and row three for the carry and i want row one and row three for the other possibility with the carry that's a horrible nested or statement but it's working it's working okay here we go so by full adder using the display on a micro bit we have got something in row a we've got something coming up in row b that i don't know is that is that something reasonable let's pop some more bits in there so what have i got i've got a thought and a two and a one that makes seven i've got a an eight and a one seven and nine is indeed sixteen which is the bit that bottom row there and we have 51 seconds left by my clock so from nothing to creating a full adder using the the micro bit pixel display as promised and that is that is so awesome like oh my goodness we've all we are all gobsmacked so hopefully you're going to share that link again i'll publish the new version of this i don't even know whether it updates the version but if you grab the code first you can because you may not have access to the chat afterwards but that's my version exactly right there are ways to make this much more elegant but i'll let you do that for yourselves okay that was amazing i think everyone has enjoyed it i'm just watching the chat and they're like oh watching the pressure build and the tension it's exciting yeah people are really enjoying it so that's awesome so thank you so much miles and thank you everyone else for joining us for the last session can you believe we are at the last session and i'm gonna there's going to be no break everyone's supposed to hustle over to the stage right now for the big finish so thanks again miles i hope everyone has their code now safely saved on their own computer because uh that might be keeping me up thank you so much for facilitating this and thank you folks for joining in with the check text chat now thank you bye everyone bye