micro:bit LIVE 2021 | Assessing computational thinking using micro:bits
https://www.youtube.com/watch?v="_rAtzFJSU2w
thanks barb um good afternoon everyone um i hope you're enjoying this session so far today um we are so excited to be here and sharing our presentation with you um i wanted to introduce myself even though barb already did a great job my name is simone and i am a occasional teacher teaching in ontario canada and my speaking partner dr julie mueller is going to start our presentation off we're just going to do a little switch thanks simone and before simone really details the assessment that she used in her lesson i'd like to provide a more theoretical framework for that assessment as with any emerging concept the term computational thinking has been hotly debated and a common definition sought there have been wars um over ownership with computer science staking claim to it proclaiming it as an exclusive term while politicians and educators fight to make it part of a 21st century revolution in learning so those involved in micro bit live this week might see it as common sense as a learning theorist i think about computational thinking as a way of thinking so a particular approach to problem solving so it's important that we as educators not only know how to use the micro bit which the lessons and ideas provided for implementation are necessary and awesome as well but education educators should also know why the micro bit works what skills and concepts it might address and then how we assess those competencies and curriculum expectations so we aren't just measuring the ability to code if you look at the iste and the computer science teachers association definitions they define it more broadly but include specific concepts and tools so it states a problem solving process that includes but it is not limited to the following characteristics formulating problems in a way that enables us to use computers and other tools like the micro bit to help solve them logically organizing analyzing data representing data through abstractions such as models and simulations automating solutions through algorithmic thinking identify analyzing implementing possible solutions with a goal of achieving the most efficient and effective combination of steps and resources generalizing and transferring this problem-solving process to a variety of problems so all kinds of skills concepts and perspectives i just gotta get to my other screen there and so what how we define computational thinking will determine how we assess it so this diagram then includes the concepts involved in logical problem solving often described as decomposition pattern recognition abstraction generalization and algorithms computational thinking includes concepts practices and perspectives things like sequences loops events conditionals are part of practices like experimenting iterating testing debugging and remixing so thinking in a computational way includes expressing connecting and questioning so what does that look like in the k-8 curriculum so kindergarten to grade eight um are young learners four and five to ten eleven twelve so my research is really a series of i wonder moments and the one that i've been exploring most recently is i wonder how computational thinking fits with problem solving and the first step i took was to explore the curriculum for connections to computational thinking where does it already exist in the curriculum if we look at computational thinking as a construct with concept skills and perspectives we can address it across the curriculum so not just for math and computer science teachers or after school clubs but we begin to see where we might implement coding and robotics in a number of subjects an obvious place that ct might already exist in the curriculum would be in computer science but let's think about resolving errors in a coding script as debugging same skill might be practiced in other areas of the curriculum where ct might be hiding for instance when students are rerouting a map in social studies to avoid a roadblock they're debugging they might also be debugging in their language class when they're testing a thesis in an argument so in a few years ago we reviewed all curriculum documents for kindergarten to grade eight in ontario and actually made use of compute computational thinking during that research by writing code that analyzed the thousands of pages of curriculum we were looking at so what we found was both expected and somewhat surprising so terms were found in places like math where it was expected but also in somewhat less expected places like social studies and health and phys ed i'm a phys ed teacher and i like to say everything i need to know i learned in the gym and that happens here as well so perspectives making connections expressing and questioning necessary for ct were found across the curriculum most frequently in french as a second language which perhaps surprisingly um that second language learning is good for so many things what we did not find were references to specific practices like coding and computational thinking skills that seem to be somewhat missing from the curriculum well there's no question that students are engaged when they're coding and doing robotic activities and they're learning skills that they can apply to further computational thinking activities but ensuring we address the mandated curriculum expectations and that we prepare students in a scaffolded way for future learning it means we must assess their learning for as and of so that is we want to know what it is students are learning or more importantly not learning so that we can include lessons and support that enhance the progress at whatever level they might be at so many of the emerging activities we use in our classrooms might be constructed by experts in the field of educational technology like our partner inksmith who develops robots and uses a micro bit to power those robots but it's key that the teacher using those resources fits them into their particular context so we can assess computational thinking in a variety of ways including listening to what children say and asking them what they are thinking i conducted a research study in a lego robotics camp and asked students to think aloud as they built their robots so let's listen in to students as they were working with the robot and you see in the picture there that the kate robot so what are clear examples of the concepts and skills involved in problem solving with computational thinking in their talk if we know what we're listening for we can measure at least its presence so in this case the student was very clearly dealing with decomposition figuring out i'm thinking about how to actually solve the problem so first i'm going to put out some instructions for the robot i'm also going to do some switching and also some loops using the language of coding but decomposing the problem at hand testing very clearly now i'm going to test the straight line so this was we explicitly asked students what they were thinking and to say that out loud so we could capture it debugging oh i know why i did not put it in the loop so hearing that debugging we can also ask questions ourselves as we observe children coding and problem solving with specific skills and concepts in mind so in our resource page i've included an assessment tool we developed in one of our chapters for example if we want to assess their decomposition skills we ask ourselves if they're able to break that problem down into smaller more manageable parts when you are observing do they identify steps in their coding using language like first and then or i need to abstraction may be demonstrated if you see students removing blocks from a code that are not necessary or creating repeat blocks to shorten a code so while they're coding or if they submit a copy of that code so iterative thinking might be apparent if we look for students responding to roadblocks by trying something new all of these questions we can use when we're observing what children are doing when they're using robots micro bits tools so i'm going to stop now and i'm going to let simone come back into the speaker chair and tell you about what that looks like in practice thanks julie um so like julie said for the next section of our presentation i'll be taking you through the lesson that i did uh with a grade five class so nine to ten year olds uh using microbits and kate robots from inksmith with a focus on what assessments i use that you could also use with your class and the results from those assessments so what did the lesson look like at first i showed the students what the learning goals were i really wanted them to focus on working through their problems that arise while coding as well as work as a team um on the left side of the screen here you'll see i chose a couple curriculum connections just to zone in on because as julie mentioned before uh there are many more that can be found in the curriculum so i've pulled um a math curriculum expectation from the social emotional learning skills um and this one specifically talks about you know maintaining positive motivation and perseverance while problem solving to realize that that is an important part uh making mistakes is important part of the learning process okay and i also have a science and technology curriculum connection there as well so i did want to preface um this lesson by saying that it it it was an introductory or a basic lesson to focus on the assessments of students in the class so i started this project it was supposed to be a virtual lesson with this grade 5 class and um it ended up being in person which actually really worked out well because i gave all the students viewing access to the slideshow that i created and it had all the links embedded for the assessments so everything was in one place i i designed a google form so i could get the data from each student and i find that really helpful as a teacher to have everything sort of in one place um this google form had three questions they were have you ever quoted before statements about themselves in regard to their problem-solving approach and a debugging skill testing question which are all from the larger callisto computational thinking test which you'll be given the link later on this was a great diagnostic for me um because i found out that only three students in the class were first-time coders meaning that 20 students already had experience and what i didn't find out until later was that most of those students already had microbit experience specifically from the previous year so that was really interesting to find out later i found that this pre-assessment was a great way to start off or could be a great way to start off a coding unit in math or even just to get to know your students at the beginning of the of the year to see where they're at um and it's also a self-assessment and a metacognitive activity for students to start thinking about their own experience and problems solving strategies that they use okay so here are the results from the second callisto question um i looked at the information that i gathered from the google doc uh google form um and gathered that most students like the challenge of coding um so if you can see there on the right side of the screen there are 14 students that agreed with that statement and seven students that strongly agreed with that statement most students were comfortable using coding to solve problems most students don't often feel frustrated when there is a coding error and and then there were a split between debugging on their own and asking someone to fix their problem for them so that last question was interesting because if i was their classroom teacher so keep in mind i was a substitute that day or a supply teacher this would tell me a lot about which students i would be observing uh during this lesson so are they again are they always looking for someone else to solve their problems or are they using a problem-solving strategy that trying that out first before seeking help in others okay so this is the last close to a question that the students did i'd like you to take a moment to answer this question and you can put um your answer in the chat so it says what is the error in the instructions is it a b c or d i don't put your hands in the chat julie she already knows okay yeah i've got a lot of c's always pick c's rule i think so um yeah so the the answer was c so you were correct um after the students submitted their google forms i showed students the answer and asked them why they picked the answer they did regardless of being right or wrong um so as you see here most students did pick c but some pick b there was a couple um and i really recommend doing like showing the students uh the answer and talking about it um right after they do the google form um because it was a learning experience for me i got i got some data from this which i'm going to share with you now and it was a learning experience for the students this is an opportunity when we can gather information about how much students know about coding and computational thinking and how we can scaffold their learning to meet their needs this so i'll show you what i gathered so this was the listening part that julie was talking about earlier and it gave me insight on what thinking skills uh that these specific students were using so the student who answered b um said that she knew the two movement blocks had to be together but thought that the repeat block was going to inhibit the code somehow so when i look at this maybe she's never used code loops before um but she did know that the two movement blocks had to be together for it to work so i thought her her explanation was interesting and another student who answered c um he said that um he had thought about what it would look like if you were to do this uh code like with the pencil and um we actually showed what that would look like on the board so it kind of looks like a sideways l and so students could see okay if we if this code actually if we executed it this is what it would look like and it would not make the square so again a learning experience for them and me okay i split my lesson into two parts with two tasks um again if i had known that the students had experience with micro bits i probably would have done this a bit differently as i planned a very basic lesson so i directed all students to microsoft make code and again all links were embedded in the slideshow so they all knew where to go and their task was to make the leds show a smiley face which as you could probably guess this was super easy for them but because this lesson was not about assessing their coding skills this gave me a chance to assess their collaborative approach to problem solving and gave the students confidence to approach the next task with the kate robots um so i just have a couple teaching tips here at the bottom it says use screenshots um so you can ask students to submit screenshots of their code and you can give them feedback that way um especially if you're doing it virtually um i also have do all coding individually so the kids are getting or students are getting immediate feedback um right then and there rather than being focused uh in on their groups and who's in their groups and what are other people doing um so if um you're like me i had um a set of micro bits so not every student was going to get one so i had 10 groups of two or three students in each group and one micro bit was given to each group so saying that all students can do the coding first on microsoft make code and then when you're ready then they can use the micro bits in their groups but to make sure that learning the problem solving is happening i would suggest all coding done before putting students into those groups so for the second half of the lesson that i did uh their task was to make the kate robot move straight and turn right i left this pretty open because i knew some of the students would be more advanced than than others um and if you've never seen um a kate robot before this is a short clip from inksmith so not from my session but here's what it looks like and what it does foreign okay um yeah so that's just one thing movement um that uh the kate robots can do so again the teaching tip of the side there leave time for debugging i had a full two hours which included all assessments and the micro bit the first part um so uh one hour for debugging honestly probably could have been more um because the students were finding um that their robots were either going in a circle or what wasn't going the way that they wanted it to go so definitely leave time for debugging and again that leaves more um more time for them to think through their problems and you know use those strategies oops there we go so assessing computational thinking through listening um so for the ticket out the door assessment so right before we left uh we did julie and i decided against using the callisto questions again and went for a more open-ended question about how they solved any problems during their coding experience and this was to address the learning goals from the beginning so i was looking for answers relating to problem solving not coding skills uh to do this i used a jam board um because i like to have all the information in one place but some of the answers got deleted so my teaching tip would be make separate jamboard pages if you've ever used jamboard before separate pages for each group so nothing gets uh deleted um and use the vocabulary from your lesson and put it on the jamboard so students can use that language in their answers and focus more on what they what they did and you'll get more valuable information from them so when analyzing the answers afterwards we found evidence of collaborative problem solving and perseverance and as well as computational thinking so for example um we had iteration so we had to try many times experimenting we tried downloading it again and debugging we changed our code because they kept running into problems you're not gonna be able to assess every skill in every uh from everyone in every lesson so again these are just a few things that we took away after uh looking at the results and i got help from the teacher one student who wrote that connects to the beginning survey so again some students said they'd rather ask for help then try a different problem solving strategy so that was great to see that connection um assessing computational thinking through questioning so this is after i used julie's assessment tool and i asked myself questions in regards to what i observed about the students during the coding activity so for example a decomposition i ask myself can the students break down the problem into smaller more manageable parts yes i observed many students starting with an onstart and or and a forever loop at the beginning of the activity and building on from there um and then you have testing and debugging students had a variety of strategies to solve problems and debug their code this is what i was observing during my lesson and iterative thinking students were trying really hard and they were trying again and again so they didn't give up that was great to see so just because we have a few minutes left and before we share our resources with you we wanted to take some time to let you think about and share how our presentation today might connect to your own teaching so you can choose to answer one of the questions that you see there or feel free to unmute and chat with us we would love to hear from you that's funny um in your presentation if you wouldn't mind going back to screens there was a picture i wanted to snag of that if that's possible yeah the one right before this one this one yeah oh the jamboard teacher tips i thought that was awesome like that is really smart all right this is fine yep okay that was good i thought i had it and then there it was gone anyway very much enjoyed your talk and i love um thank you julie um no simone for keeping it realistic because you know without the teacher tips that's not really you know like nothing goes the way you think it should go and so having the teacher tip in there that's wonderful yeah um michael's excited he's doing a kate robot session this coming week and he would like to use pre and post assessments so this fit right into his wheelhouse that's perfect i call that you know good timing for sure and is michael i'll just shout in from the side here yeah that's okay are you aware of the callisto um quiz for students so maybe you you might have to toss that in the chat so that he can yeah read it as well actually so that i can put in the chat okay thanks everyone we're switching again that's okay we're loving that oh andrew's asking more about that so there you go now we need our um now maybe we need to tell her everything all about it yeah tell us all about it just move ahead to that no problem i got what i wanted it's all about me sure um and that the link is on there the the slides um i don't know barb can maybe help us um oh simone's going to put in the yeah but if you just google callisto um computational thinking it should come up um and yes micah we can chat about that it's it's it's under research it's we are not the authors of that but um i'm using it in some of my research they've kept it open access for folks to use in research but they they do not share a an answer code so it's great um that you kind of have to figure out the answers yourself um until that they're finished their research but there is a student version and there's a teacher version i'm going to be doing some research with our pre-service teachers and our in-service teachers using that measure to see where we're starting from too so um there's only one copy and that's why we chose two different so michael when you're talking about a pre and post assessment um the pre-assessment it's it's more like a diagnostic this quiz right so where are they at you wouldn't want to give the same questions immediately after and and a lesson or probably even you know a few lessons so you may want to look at a different way to assess when you are when you're finished like simone did where um students can give their thinking yeah and yes maybe i can move you guys and yeah anyone so there's our our information and um yeah if anybody wants to chat about how we're assessing and how you might be using some of those tools you can connect with us there yeah do you want to go ahead and oh twitter one i do there we go and there are the twitter handles miss grenier yeah and jamie or prof that is my um my research lab also has a twitter but it's probably easier to get it in touch with me just personally there