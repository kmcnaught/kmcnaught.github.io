micro:bit LIVE 2021 | Authoring MakeCode Tutorials
https://www.youtube.com/watch?v="3SLgRn7SQX8
thank you dustin hi everybody good morning good afternoon and good evening wherever you are in the world i'm going to project my screen first all right i hope everybody can see the screen and let me go to the next slide all right this talk is about uh authoring tutorials in make code uh we will um let's see the agenda first so first in my introduction i'm i'm abhijit i'm a dev lead of the make code team i have jacqueline in the chat so she'll help answer any question in the chat it's going to be hard for me to monitor both the chat and give this talk so she's going to help me out in there and i'm going to briefly talk about micro bit and make code in the beginning like one minute intro i'm assuming everybody who's in this talk knows about my computer and make code but just in case i'll give it a quick intro i'm going to talk about what is a tutorial how to write a tutorial a bunch of demos in between and once you write a tutorial and you know how to write a tutorial how do you host that in a github repo which is where our primary way we serve all our content from some more demo there the end i'll have some pointers for resources let's go to the next slide for people who don't know microbite microbial is an awesome microcontroller which students can use to bring their creations to life right that's that's what it is it has it's packed with sensors it has 5 cross 5 leds accelerometer compass thermometer tons of other sensors including pins the beautiful part of the micro bit is you can think of anything and it can build out of it you think of a robot you can build out of it you want to think of a watering a plant when the humidity is low you can build that out of it i'm not going to sell anymore because i'm assuming everybody knows about micro bit here so let's go to the next one so what is make code make call makes it easy to program micro bit right it's a programming environment there's a lot of editors for micro bit make code is one of them but it is free open source online you just need a web browser and you can program micro beta on top of it right a couple of strengths of make code is it has a simulator this nice set of blocks uh blocks are a way of programming where there is no syntax error but it has low bar and high ceiling so you can go to javascript or python and you can do uh any complicated program you want right it's a full-fledged id in that sense let me open my browser and give a quick demo right so this is a make code editor as you can see this is home screen we got a bunch of content and create a new project you get in you have a toolbox on the left your workspace on the right you can switch to javascript python you can drag blocks in it and in two seconds i have a flashing heart program which basically runs a heart and forever in a micro bit and i can download into a hard device and i can see a flashing heart in my device i just downloaded this before this talk so you can see it that's it that's the beauty of this editor this is think it as a visual studio studio code for kids or a professional ide for students but it's browser based so you don't need to install anything and let's go to home screen home screen is about all the content it has your projects and bunch of tutorials and a lot of other stuff let's get back to our presentation so my presentation is going to be switching between the demo and this continuously so bear with me it takes a couple of minutes to switch a couple of seconds i would say so now come back to what is the tutorial now i showed you editor right an editor is centered around programming your creation but sometimes students need hand holding right you want to teach a particular concept to the kid right it's a constrained environment of content plus makeup editor it's a content which drives the editor and um and you ask kids to do specific things a couple of reasons you would want to do this one you want a teacher to teach a particular concept and without any other distraction of other blogs or other things in editor or you are an extension author right and you want to teach some particular car you are extension to students right because um we don't have a by default bunch of things in our own editor so you might want to build those things there are a couple of scenarios maybe just fun sometimes you want to teach debugging things to students as well i'm going to do a demo of a tutorial for people who don't know right so this is flashing heart is our number one tutorial it's a first tutorial we recommend students do if they are coming to our editor for the first time so let's go to our blogs i'm doing a blogs tutorial now but javascript or python is very similar so when you enter this tutorial first it gives a dialogue saying that what you're going to build this is telling me we're going to build a flashing heart today right okay gives you a hint how to build a flashing heart it gives you instruction at the top saying place the show leds block in the forever block and draw a heart right and if you see there are not any other blocks that is just a single block and a forever block right i'm going to drag this i'm going to try a drawing heart here hopefully you did it right yeah that's in heart go to the next step just place another show led's block and you leave it blank and draw what you like or draw what you like i'm going to re leave it blank if you see in the simulator on the left you can see a flashing heart let's look at the hint and see easy to do it right yes i did it right let's go to the next one and asking me to look at the virtual micro bits which i did already the last one download to the hardware which i've also have done already so i have a flashing hat right here done right this is like 15 minutes you can have your first program working in your micro bit right this is like a hello world for a kid it can blink the leds in the microwave within 15-20 minutes beauty of the tutorial format is it constrains the environment completely so that you can a kid can be focused on what they're doing and the instructions are live in the edit so let's go to the next step so we kind of saw why you why tutorial is a powerful tool um now as a person as a teacher or an extension author or a parent why would you want to build your own content right what's the need for it as i've shown in the home screen there's a lot of content already there so you could just use the content tutorial which is already there however assume you wanted to just take your extension with your build it's in hardware you've built i mean you want and we don't have a tutorial for it you want to build that that's one of the scenarios another is teacher really wants to teach a particular concept in a better way than we can do and they are the experts knowing in their kids their and their uh shortcomings and their need for pedagogy right so they might want to build something special there so maybe you want to just build it for fun that is another that's a perfectly valid reason to build content so what do you need to build this kind of a tutorial content which is embedded in the editor we made it so easy you just need a browser and a link to our website called tutorial tool and to have that you need to learn a basics of markdown syntax and you'd be ready to go i'm going to give a demo of it now from us from state 0 right so let's let's and feel free to follow as i'm doing it i'm going to put the link to the site in the chat so it's called mikko.com tutorial tool yeah jaclyn has already put that link in the chat so we're all good to go let me not write anything this is the tool quick brief intro of the tool so basically uh it's picked micro but as an editor there is a content writing pane on the left hand side and our full editor on the right hand right hand side one of the important thing is there is a tutorial box you can click on the docs and it will take you all the things you need to know but for today's talk i'm going to just type it and see how it easy it is let's go to the the way you write the tutorial is in a markdown syntax um markdown looks like a scalar thing but it is really kind of an annotation you do in the text to tell the editor what to do right first you're going to just concentrate on the text and do four things we're going to add steps you're going to add some emojis because everybody likes emojis we'll add some gifs and we will show you how to change from a step to it dialog kind of interface this is what we're going to try in the beginning it starts all right so the top level is this is a top level heading and this is usually title of your tutorial and we call it flashing heart pretty long heading all right the second level is steps step one and step two and step three and you click on the run button and you'll see on the right hand side the whole editor chain into a tutorial kind of an interface and you see the heading is at the top this is your title of your tutorial i'm going to increase the font just it's easy uh i think it's better i hope this is better um so you can see um i think i lost the title maybe i should do a little bit lower form okay so you can see there are three steps one two and three there's nothing in there because i haven't filled anything in there so the step one is basically we're going to add some data in there let's try to add some data okay let's say this is an introduction right that's the first one the step two and this drag okay show led so the one we are going to the tutorial we are going to build today is flashing heart so the second step is to show led's block and place it under forever block and the step three is drag another leds block basic and the first block so i have three steps and you can see there are three steps in in in the tutorial on the right hand side so i've given instruction for three steps so let's run it and see so my first step comes in here this is an introduction second step is telling me to do something which is drag the show leds block under the forever block and the third one is drag it surely this block and place it under the first block so all three gets re reflected in my tutorial um what did we want to do right that this is the first thing we have top level macro and the second level macro top level macbook title second level macro is the steps sometimes you don't show the top level marker if you don't have a space in the tutorial but most of the time it comes at the top now we want to add some emojis right that's that's what we're trying to do let's add some emojis um okay and i want to add some chips as well in my thing so i'm gonna add some chips um these are not relevant for this tutorial but i'm just trying it out so let me add sorry jeff emoji there okay i'm going to show you one more thing right the first step is basically introduction right so i don't want it to be a part of the step in the top bar i do want to be part of the full dialogue so let me do show dialog these are kind of a macros which tells the editor the edge show dialog is a macro which tells editor go and show it as a dialog instead of step at the top so let me run this so now i got the dialogue on the right hand side which is the top level dialog which emojis and gifs these can be steps but i've made it as a dialogue i still have three steps but when first one comes up as a dialog second one as a step right you can see the steps here and the third one has another step so we have three steps now and we have an emoji and gif in the top one this is it for the text right you can do rich kind of set of things with just these four things you can have a dialogue you can have emojis and you can have gifs which explains what to do and and you can have a steps built up you can have 10 steps tutorial or like a 5 step whatever you want to so you can control the full text using this but this is lacking one of the things right what i said in the thing is beauty of the tutorial is it reduces the toolbox but if you see a toolbox is full there's all the things just necessary let me zoom out a bit and show you this thing right so i want to filter it out i want to tell it only use these blocks in this editor don't use and give me any other blocks right let's see how to do that let's go back to our 150 percent so you guys can see a bit more all right and let's try let's go to our next slide there are two things which are super important when you're displaying blocks or javascript there's a block syntax which you can use and specify what blocks to use and you can highlight the text as well and say this block is important and show it is in the color of that category i'll tell you what i mean right i'll show you what i mean let's go back to this and say i'm interested in the blocks only show leds right so but i don't know what the marked on the important thing to note here markdown only accepts javascript it doesn't accept blocks yet right but you can convert those javascript into blocks kind of an important distinction if you're writing this uh markdown you need to have some knowledge of javascript if you have no knowledge you can you can use the editor to get the javascript thing for example i'm interested in show led's block right because i want kids to draw this but i don't know javascript myself but i'm teaching blocks so i don't care at this point but i can go to javascript and copy this code and put it on the blocks so basically i'm telling the editor to display only the blocks which are referenced here which is forever and show leds let's run this right and let's reduce the zoom bit so we know what we're doing now if you see the bar though the toolbox is filtered out and you go to basic and there are just two blocks show leds in forever because that's what we specified here there's another advantage advantage to this which is if you go to the hint it gives me the hint by default because that's a snippet we wrote it here if you don't want this exact hint because you don't want to give the key there are macros like explicit hints which you can go and look up so you can give a different hit by default sometimes it's very useful if your kids get stuck they can go to the hint and find out the exact key now if you don't want to do blocks and want to go to javascript you can just switch this to javascript and you can run it and now the whole edit will switch to a javascript editor monaco and i can drag this that's that easy now but we're interested in blocks let's go back to blocks you can do python tool very similarly you can have a python snippet and have a python thing there if you want to teach python um so i have a filter blocks here it's two blocks i have a hint but if you see the text at the top it still says drag the show leds block and place it under the forever block right the top text here still says that i want the show leds to look like a block because it's kind of hard for kid to figure out what is english text and what is the block reference so this is kind of powerful feature which i've seen kids love it so i'm going to type this out so let me let me do this so i basically say this show led stacks show it in the color color of the basic what this tells our editor is the show leds is the name of the block so show it in the color of the basic category and run this let's zoom out a bit you can see at the top the show leds is basically shows up in a blue color right so it tells the kids that uh show leds you can go to the basic category and fetch it in the future we want to improve the show energies to show the exact block so this this annotation um or some other way you're going to click on it it shows the exact exact block so we do want this annotation to be there in the content so it's easy for kids to figure out so what you've done is you've written the text you filter out the blocks and they've shown the block color so it's everything is working pretty good till now so let's go back to our presentation so we did all this we did all the blocks too and there are a couple of interesting things which i want to point out too i'll give i'll show a sample program after this but basically you can add any extensions to this as well you can have a package syntax and you can add an extension to this tutorial you need to add a package syntax because you need to know which extension you are referring to but as soon as you add it we'll refer this extension in the diagram in the right there's a turtle extension which is reference to that it is template and ghost blocks too template blocks basically gives this sample code in the workspace and i'll show you whatever it means and the ghost blocks adds to additional blocks into the toolbox let's see what they mean the interest of time i'm going to copy some code to show you quickly and i'm going to sorry so i've written one sample tutorial and i put it in the github which uses extensions so i'm going to copy right here uh it has all the things i've just referenced let's do it big so it has an introduction it's just dialogue everything is fine by the end it refers a micro turtle extension right this says fetch this extension in this case it is fetching the particular version of it but you don't need this typically it says refer a micro turtle extension once you specify this in the thing you can specif you can use that api namespace to refer those things now you can see there is template and ghost as well here right a template what it adds is by default it adds some of the blocks into the workspace when the tutorial is begun for example when i start this tutorial you can see pen up is already in the workspace okay add another thing up and down these are logo turtle style apis run it i get two of them here so you can have some starter code in the tutorial the template is a very useful thing to do sometimes uh just the instructions are not sufficient you want some starter code running in there right and this help helps you do that i think i made a mistake but i think this down is capital let's try again yeah that works a ghost is basically sometimes you want some additional categories or additional blocks in the toolbox but you are not referring referencing them anywhere in your blogs or template code the scenario is something like this right your tutorial is teaching some set of blocks but you do want to give students some additional challenge if they want to go beyond that for example in this case it says show the function blocks if the kids want to use functions they can use functions but otherwise functions are not used anywhere in this tutorial right what happens if i remove this let me quickly show it to you run so okay see there's no function block here so the ghost block basically gave an additional category and the functions right and you can use those blocks kids can use blocks right they're not referenced anywhere in the tutorial they're not on the workspace on the right but they add some additional blocks in the tutorial that's kind of three things we talk now template which pro builds some starter code in the workspace ghost adds some additional blocks into your toolbox package to refer any packages at this point we are done right we don't have uh only other thing we have to do now is go test with our students our consumers how do i test this now so i can see all my code working on the right but how do i share with my students there is a quick and dirty way to do it which is i'm going to show first which is very easy for you to try out you click on the share button on the right and it generates an url right and i can show you i can paste the url here you can see live now that it's a live generated url and you can try it if you go to the url and paste it it should load the tutorial right now it's basically telling the editor load this particular tutorial tutorial from the share page and my turtle tutorial is all working great right everything is the default template box there are additional blocks here the turtle apis uh people who don't know what extension is i had a talk last year on the same live summit on extensions so please go and watch this talk it's exchanges are basically blocks which are added to your toolbox and any third anybody can write it uh this this year stock is adding content into make code so it's kind of a complimentary things right so going ahead so you can completely try there are a couple of disadvantages to this right one this link is read-only so if you want to change your content you want to reshare it and resend the new link and it can contain one tutorial at a time so if you have 10 tutorial you need to send 10 links to students and becomes hard to manage going back to my presentation so we did the first quick test in live site so you get the tutorial one right so now the real nice way to do is move all this content into github right you want to move all of them to github repo there are a couple of ways to do it one you fork an existing before the repo which i shared i mean like a couple of minutes back you can just fork it put all your content in there and just share that right that's one way another way is from scratch you go to our editor we have a first class github integration in the editor and you can use that i'm going to demo that too in a moment uh tagging your release is important then you test again your license and all kind of localization is supported so you can basically write your own localized localized content in the in the github repo and we'll load the correct one based on the user language so i'm going to show how to hold how to move this to github let's go to the editor so again i have the whole content here i'm being control a control c i'm copying it i'm going to a new project i'm going to just do javascript because this is all javascript if you want to do github a github integration support for blocks but if you want to write the content it's primarily you have to add a new file and the file support is only in javascript we expect the we don't expect kids to do this right we expect the content author who is slightly higher knowledge to do this so i'm in the editor there's a plus sign there do a plus sign i'll say title.md go ahead creates a new file you can see in the explorer explorer shows all the files in the project including your dependencies but you're just interested in this new md file i paste everything here this is my content as you notice there is a github button at the bottom i'm going to click on it i'm already logged into github but i will get a login prompt and i'll say live demo micro bits live demo i name this repos micro bit live demo uh i'm going to i'm going to click on that button what is happening in the background is all this content from this project is going into github we are preparing a github repository for you and once it is done we will get we will come back so it takes a couple of minutes to do that one of the important things i said was very important to tag the release this is because uh our backend fetches the latest stack it doesn't fetch the latest check-in in the github repo this is nice for developers because you can keep doing changes and we will fetch the last known good tag which you've done so you have to do a release i'm going to do a release it's a click of a button here but you can do it in a github as well once you get the release done okay it's kind of done so if you see here there are small links here there's a share link i'm going to click on it it's going to give me the entire link to my let's first do a couple of things let's see a ripple it's all real or this is all magic happening and like i'm going to share this report too just for people to look at it so this is a report we just created a brand new repo created 33 seconds back and if you see there's a turtle.mdn that has our content right and now we see how to load this repo in the live editor let's do [Music] i don't know that you can see at the top but basically we are loading this tutorial with the hash tutorial tag with the link to our exact github repo so if i click on this it'll load my tutorial i'm going to share this link to for people to try see that this is live everything github reports just created and i could share with you and you you guys can basically use the github repo to launch the tutorial which i've just created so within like 20 30 minutes i was able to create end-to-end the hardest part in all this thing is not the process it's the content right content some writing takes a while especially if you want to entice the kids with the interesting content that takes some time but process wise it's pretty straightforward i'm going to repeat it so we did a quick test in a live demolition share the shares are not powerful feature because they are read-only and you can't change them ideally you want to move your code to github we tag the release in the editor but you can tag in the github as well we test it again with this format and loaded the tutorial you need to license and get tutorial approved there are some benefits to that and the full localization is supported which i did not demo here but it is completely supported it's very similar to extension localization a bunch of tools tutorial 2 is the most powerful one you can look at the documentation there are tons of macros to make your content nice looking um so you can basically um use this macros to produce a rich content for example there are activities macro you can have multiple activities in a tutorial and those kind of things um make a blog is a good one to follow up new features we're adding into this so we keep uh innovating in this space tutorial laughing is fairly new uh we've been we had extension authoring for a long time so tutorial lighting is not perfect yet there are still some of the things which might be hard for folks just please um please give us feedback and make her blog is here the link is here i'll share the links at the end of it that's pretty much it from my talk so is there any particular question so i have five minutes for the questions and these are the social handles please follow us and give us feedback we'll be happy to take any feedback thank you thanks so much what an incredible session uh please use the chat um thanks so much for sharing your knowledge and uh the amazing new ways make codes responding to how classrooms and educators want to empower students can we get the presentation linked to the people i think there are a couple of questions how do they get the link these links yes so the the recordings will be all shared uh via youtube but expect communication from the foundation and the event organizers just in terms of accessing the content following uh the conference i could pick up any questions i'm going to go through i think jacqueline answered most of those questions i'm happy to bring jacqueline in but we don't have a lot of time i don't know if there's if you're wanting to answer any questions jacqueline through your camera i just see you on my console here and that's okay either way yeah gypsy you can point to any chips right i think that one of the questions was can i do gifs you you can do gifs or usually it has to be hosted in github so there are size limits on the gifs yeah go ahead jacqueline yeah so a couple questions abba just that came up one is martine was asking how to author tutorials with extension so i've built a custom extension and i want to build my tutorial how do i do that yeah i touched up on it but i didn't show completely uh usually there's a package macro i can quickly show that too uh hold on oh man we have presented there's a package macro which i'm going to type it here so you can use that and refer any package so it's completely supported if you see my one of the github reports i've shared in this live demo you see that that reference is a turtle package so you can just follow that thing once you refer the package macro you can use any apis inside that in your content so it's completely supported that's a primary scenario we want to support as well and then the second question andrew was asking is can you reference external files in your tutorial like external pngs or do all the files have to be in the tutorial repo you can refer external things but to get approved typically it has to be in the thing because we have to make sure these are right things for students but to experiment you can always refer any external gifs as well and just to clarify the benefit of getting approved is that you won't have like a little disclaimer on your tutorial saying this is not approved content so yeah i mean these are students we want to be sure that the content is right for them right so great i think that was all the open questions that i saw cool thank you so much thanks jacqueline and dustin for all the help and monitoring the chat thanks so much